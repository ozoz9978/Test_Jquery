*** 선택자 (Selector)
1) 기본 선택자
    *               -> 전체 선택자
    element 선택자  -> 태그명 그 자체를 선택자로 사용
    #아이디명       -> 아이디 선택자
    .클래스명       -> 클래스 선택자
    , (그룹 선택자) -> 여러 요소를 선택할 때
    계층 선택자
        자식 선택자(>), 후손 선택자(공백)
        형제 선택자(+)
        복수형제 선택자(~)


2) 속성선택자
    [속성명]        -> 해당 속성을 가진 요소들
    [속성명=값]     -> 속성이 특정 값을 가진 요소 선택
    [속성명$=값]    -> 속성의 끝 값으로 지정된 값을 가졌을 때 선택
    [속성명*=값]    -> 속성의 끝으로 지정된 값을 포함하고 있을 때
    [속성명^=값]    -> 속성의 시작 값으로 지정된 값을 가졌을 때 선택
    기타 등등

3) 필터 선택자 (:)
    :input  -> 입력폼
    :file   -> 파일 업로드 폼
    :hidden -> 숨겨진 폼
    :radio  -> 라디오버튼 폼
    :submit
    :password
    :text
    :reset

4) 입력 폼의 현재 상태에 따른 선택자
    :checked    -> check 되어 있는 요소
    :selected   -> select 되어 있는 요소
    :disabled   -> disabled 되어 있는 요소
    :enabled    -> enabled 되어 있는 요소

5) Visibility 선택자
    :hidden     -> 보이지 않는 요소
    :visible    -> 보이는 요소

6) 내용에 따른 선택자
    :contains(텍스트)-> ()안의 텍스트와 일치하는 문자열을 가진 요소 선택
    :empty()         -> 텍스트가 없는 요소 <span></span>
    :has(요소)       -> ()안의 요소를 포함하고 있는 요소

** 필터링 메소드
    eq(n)      -> n번 인덱스에 해당하는 요소를 선택
    filter()   -> 조건에 맞는 요소를 선택
    not(선택된 요소) -> 선택된 집합이 아닌 요소를 선택
    is(선택 조건) -> 조건에 맞는 요소를 선택
    has()       -> 선택한 요소의 자식 요소 중에서 has()에서 주어진 선택자가 있는지 확인한 후 선택
    first()     -> 선택된 요소 중 첫 번째
    last()      -> 선택된 요소 중 마지막

** 트래버싱(Traversing)
    - 특정 요소를 먼저 선택한 후 그 요소를 기준으로 새로운 요소를 찾는 방법
    parent() -> 부모 요소
    children() -> 후손 요소
    prev()  -> 형님 요소
    next()  -> 동생 요소
    siblings -> 선택한 요소의 형제 요소
    find()   -> 선택한 요소의 후손 요소들 중 조건에 맞는 요소를 선택